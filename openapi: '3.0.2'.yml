openapi: '3.0.2'

info:
  title: Cake Store API
  version: '1.0'

servers:
  - url: http://localhost:3000

paths:
  /cakes:
    get:
      parameters:
        - in: query
          description: |
            page by default is 1
          name: page
          schema:
            type: integer

        - in: query
          name: limit
          description: |
            limit by default is 10
          schema:
            type: integer

        - in: query
          name: title
          schema:
            type: string

        - in: query
          name: description
          schema:
            type: string

        - in: query
          name: rating
          schema:
            type: integer
            format: float

        - in: query
          name: order_by_alphabetical
          description: |
            alphabetical order by default is desc
          schema:
            type: string
            enum:
              - asc
              - desc

        - in: query
          name: order_by_rating
          description: |
            rating order by default is desc
          schema:
            type: string
            enum:
              - asc
              - desc

      operationId: GetCakes
      description: |
        show a list of cakes, 
        cakes sorted by rating and alphabetically,
        info. payload data always order by rating and alphabetically in desc.
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: "search cakes found"
                      payload:
                        type: array
                        items:
                          $ref: '#/components/schemas/Cake'
                      error:
                        default: null

        '404':
          description: not found error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: "search cakes, records not found"
                      payload:
                        default: null
                      error:
                        default: null

        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 500
                      message:
                        type: string
                        example: "search cakes, an error occurred"
                      payload:
                        default: null
                  - $ref: '#/components/schemas/Error'

    post:
      description: Adding a new cake
      operationId: AddCake
      requestBody:
        description: Add a new cake
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NewCake'
              - required:
                  - title
                  - description
                  - rating
                  - image

      responses:
        '201':
          description: success add new record
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 201
                      message:
                        type: string
                        example: "adding new cake"
                      payload:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                      error:
                        default: null

        '422':
          description: invalid validation error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 422
                      message:
                        type: string
                        example: "adding new cake, invalid request error"
                      payload:
                        default: null
                  - $ref: '#/components/schemas/ValidationError'

        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 500
                      message:
                        type: string
                        example: "adding new cake, an error occurred"
                      payload:
                        default: null
                  - $ref: '#/components/schemas/Error'

  /cakes/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer

      description: |
        show a detail of cake
      operationId: GetDetailCake
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: "search cake found"
                      payload:
                        $ref: '#/components/schemas/Cake'
                      error:
                        default: null

        '404':
          description: not found error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: "search cake, record not found"
                      payload:
                        default: null
                      error:
                        default: null

        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 500
                      message:
                        type: string
                        example: "search cake, an error occurred"
                      payload:
                        default: null
                  - $ref: '#/components/schemas/Error'

    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer

      description: Update a cake
      operationId: UpdateCake
      requestBody:
        description: Update a cake
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NewCake'
              - required:
                  - title
                  - description
                  - rating
                  - image

      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 201
                      message:
                        type: string
                        example: "updating a cake"
                      payload:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                      error:
                        default: null

        '404':
          description: not found error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: "updating a cake, record not found"
                      payload:
                        default: null
                      error:
                        default: null

        '422':
          description: invalid validation error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 422
                      message:
                        type: string
                        example: "updating a cake, invalid request"
                      payload:
                        default: null
                  - $ref: '#/components/schemas/ValidationError'

        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 500
                      message:
                        type: string
                        example: "updating a cake, an error occurred"
                      payload:
                        default: null
                  - $ref: '#/components/schemas/Error'

    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer

      description: Deleting a cake
      operationId: DeleteCake
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: "deleting a cake"
                      payload:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                      error:
                        default: null

        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      code:
                        type: integer
                        example: 500
                      message:
                        type: string
                        example: "deleting a cake, an error occurred"
                      payload:
                        default: null
                  - $ref: '#/components/schemas/Error'

components:
  schemas:
    Cake:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
        - $ref: '#/components/schemas/NewCake'
        - $ref: '#/components/schemas/Date'

    NewCake:
      type: object
      properties:
        title:
          type: string
          example: "Lemon cheesecake"
        description:
          type: string
          example: "A cheesecake made of lemon"
        rating:
          type: integer
          format: float
          example: 7
        image:
          type: string
          example: "https://img.taste.com.au/ynYrqkOs/w720-h480-cfill-q80/taste/2016/11/sunny-lemon-cheesecake-102220-1.jpeg"

    DefaultResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        payload:
          nullable: true
        error:
          nullable: true

    Error:
      type: object
      properties:
        error:  
          $ref: '#/components/schemas/ErrorTracker'

    ErrorTracker:
      type: object
      properties:
        tracker_id:
          type: string
          description: | 
            this is using xid, ref : https://github.com/rs/xid
          example: "9bsv0s24le2002put6ig"

    ValidationError:
      type: object
      properties:
        error:
          allOf:
            - type: object
              properties:
                validation:
                  type: array
                  nullable: true
                  items:
                    $ref: '#/components/schemas/ValidationErrorItems'

    ValidationErrorItems:
      type: object
      properties:
        key:
          type: string
          example: "body.key1"
        rule:
          type: string
          example: "required"
        message:
          type: string
          example: "body.key1 cant be empty"

    Date:
      type: object
      properties:
        created_at:
          type: string
          format: date-time(RFC3339)
          example: "2020-02-01T10:56:31Z"
        updated_at:
          type: string
          format: date-time(RFC3339)
          example: "2020-02-01T10:56:31Z"